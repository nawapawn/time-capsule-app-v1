// src/components/CapsuleCard.tsx (Updated)
"use client";

import React, { useState } from "react";
import { Capsule } from "@/types";
import { Lock, Unlock, Users, User } from "lucide-react"; 

interface CapsuleCardProps {
  capsule: Capsule;
}

// ‚ö™Ô∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Visibility (Monochrome Light Mode) ‚ö™Ô∏è
const getVisibilityProps = (visibility: Capsule['visibility']) => {
  switch (visibility) {
    case 'Public':
      return {
        icon: Users,
        text: 'PUBLIC',
        // üñ§ Monochrome: ‡πÄ‡∏ô‡πâ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏±‡∏î‡∏Å‡∏±‡∏ô (‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏ó‡∏≤‡∏≠‡πà‡∏≠‡∏ô‡∏°‡∏≤‡∏Å / ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏≥)
        className: 'bg-gray-100/70 text-gray-900 shadow-sm shadow-gray-300/30',
      };
    case 'Private':
      return {
        icon: User,
        text: 'PRIVATE',
        // üñ§ Monochrome: ‡πÇ‡∏ó‡∏ô‡πÄ‡∏ó‡∏≤‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
        className: 'bg-gray-200 text-gray-800 shadow-sm shadow-gray-400/30',
      };
    default:
      // ‚úÖ Default Case ‡∏ñ‡∏π‡∏Å‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ Private (‡πÅ‡∏•‡∏∞‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ UNKNOWN ‡∏≠‡∏≠‡∏Å)
      return {
        icon: User, 
        text: 'PRIVATE', // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô PRIVATE ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ Visibility ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å
        className: 'bg-gray-200 text-gray-800 shadow-sm shadow-gray-400/30',
      };
  }
};


export default function CapsuleCard({ capsule }: CapsuleCardProps) {
  // 1. ‡πÄ‡∏û‡∏¥‡πà‡∏° State ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
  const [isDetailVisible, setIsDetailVisible] = useState(false);

  const unlockDate = new Date(capsule.unlockAt || Date.now());
  const isLocked = unlockDate.getTime() > Date.now(); 

  // 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å
  const handleCardClick = () => {
    if (!isLocked) {
      // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß (Unlocked): ‡πÉ‡∏´‡πâ‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
      setIsDetailVisible(!isDetailVisible);
    } else {
      // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î (Locked): ‡∏•‡πá‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
      setIsDetailVisible(false);
      // ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏°‡∏µ feedback ‡πÄ‡∏ä‡πà‡∏ô alert ‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ
      // alert(`‡πÅ‡∏Ñ‡∏õ‡∏ã‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${unlockDate.toLocaleDateString()}`);
    }
  };
  
  const visibilityProps = getVisibilityProps(capsule.visibility);
  const VisibilityIcon = visibilityProps.icon; 

  return (
    <div 
      // 3. ‡πÉ‡∏™‡πà onClick handler
      onClick={handleCardClick}
      className={`p-5 rounded-2xl 
        // Light Glassmorphism: ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≤‡∏ß‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÅ‡∏™‡∏á, ‡πÄ‡∏á‡∏≤‡πÄ‡∏ö‡∏≤‡πÜ
        bg-white/70 backdrop-blur-md shadow-lg 
        transform hover:-translate-y-0.5 transition-all duration-300 ease-in-out 
        // Border ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡∏≠‡πà‡∏≠‡∏ô
        border border-gray-200 
        // Border ‡∏™‡∏µ Accent: ‡∏õ‡∏£‡∏±‡∏ö Hover Border ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡πÄ‡∏Ç‡πâ‡∏°/‡∏î‡∏≥
        hover:border-gray-500
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° cursor-pointer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡πà‡∏á‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ
        cursor-pointer` 
      }
    >
      
      <div className="flex items-center justify-between mb-3">
        {/* ‡∏ä‡∏∑‡πà‡∏≠ Capsule: ‡∏™‡∏µ‡∏î‡∏≥‡∏•‡πâ‡∏ß‡∏ô */}
        <h3 className="font-bold text-xl text-gray-900"> 
          {capsule.title}
        </h3>
        {/* ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô Lock/Unlock: ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡πÄ‡∏Ç‡πâ‡∏° */}
        {isLocked ? (
          <Lock size={20} className="text-gray-600 flex-shrink-0" /> 
        ) : (
          <Unlock size={20} className="text-gray-600 flex-shrink-0" /> 
        )}
      </div>
      
      {/* Date & Tag */}
      <div className="flex flex-wrap items-center gap-3">
        <p className="text-xs text-gray-500 font-mono"> 
          {isLocked ? "LOCK DATE: " : "UNLOCKED: "}
          {unlockDate.toLocaleDateString("en-US", {
            day: "numeric",
            month: "short",
            year: "numeric",
          })}
        </p>
        
        {/* 1. VISIBILITY TAG */}
        <div className={`inline-flex items-center px-2 py-0.5 text-[10px] uppercase tracking-wider font-semibold rounded-full ${visibilityProps.className}`}>
          <VisibilityIcon size={10} className="mr-1" />
          {visibilityProps.text}
        </div>
        
      </div>
          
      {/* 4. ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç */}
      {isLocked ? (
        // A. ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î (Locked)
        <div className="mt-4 pt-3 border-t border-gray-200">
          <p className="text-sm text-gray-500 italic flex items-center">
            <Lock size={14} className="mr-2" />
            This capsule is locked until its scheduled opening date.
          </p>
        </div>
      ) : (
        // B. ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß (Unlocked)
        <div className="mt-4 pt-3 border-t border-gray-200">
          {isDetailVisible ? (
            // B.1 ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å (‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß)
            // **NOTE:** ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ Type Capsule ‡∏°‡∏µ field ‡∏ä‡∏∑‡πà‡∏≠ content
            <p className="text-gray-700 text-sm whitespace-pre-wrap">
              {capsule.content || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô‡πÅ‡∏Ñ‡∏õ‡∏ã‡∏π‡∏•‡∏ô‡∏µ‡πâ"}
            </p>
          ) : (
            // B.2 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏¥‡∏ç‡∏ä‡∏ß‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
            <p className="text-gray-500 text-sm font-semibold hover:text-gray-900 transition-colors">
              View details...
            </p>
          )}
        </div>
      )}
    </div>
  );
}