// Avatar component
import React, { useState, useEffect } from "react";

// Props:
// - name: ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á initials ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ avatarUrl)
// - size: ‡∏Ç‡∏ô‡∏≤‡∏î avatar (default 56px)
// - avatarUrl: URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ avatar
type Props = { name?: string; size?: number; avatarUrl?: string };

export default function Avatar({ name, size = 56, avatarUrl }: Props) {
  // ‡∏ñ‡πâ‡∏≤ name ‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ default ‡πÄ‡∏õ‡πá‡∏ô "User"
  const safeName = name && name.trim().length > 0 ? name : "User";

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á initials ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠ (‡πÄ‡∏ä‡πà‡∏ô "John Doe" ‚Üí "JD")
  const initials = safeName
    .split(" ")
    .map((s) => s[0])
    .join("")
    .slice(0, 2)
    .toUpperCase();

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å class ‡∏Ç‡∏≠‡∏á font size ‡∏ï‡∏≤‡∏°‡∏Ç‡∏ô‡∏≤‡∏î avatar
  const getTextSizeClass = (size: number): string => {
    if (size >= 96) return "text-4xl";
    if (size >= 72) return "text-3xl";
    if (size >= 56) return "text-xl";
    if (size >= 40) return "text-base";
    return "text-sm";
  };

  const textSizeClass = getTextSizeClass(size);

  const [imgError, setImgError] = useState(false); // track ‡∏ß‡πà‡∏≤‡∏£‡∏π‡∏õ‡πÇ‡∏´‡∏•‡∏î error ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

  // üîÑ ‡∏ñ‡πâ‡∏≤ avatarUrl ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô ‡πÉ‡∏´‡πâ reset imgError
  useEffect(() => {
    setImgError(false);
  }, [avatarUrl]);

  // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å src: ‡∏ñ‡πâ‡∏≤ avatarUrl ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠ error ‚Üí ‡πÉ‡∏ä‡πâ default
  const imgSrc = avatarUrl && !imgError ? avatarUrl : "/export-removebg-preview.png";

  return (
    <img
      src={imgSrc} // ‡∏£‡∏π‡∏õ avatar
      alt={`${safeName} Avatar`} // accessibility
      width={size}
      height={size}
      className="rounded-full object-cover shadow-md" // style
      onError={() => setImgError(true)} // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Üí fallback
    />
  );
}
